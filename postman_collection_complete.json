{
  "info": {
    "name": "Mechanic API - Complete Test Suite",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:5001"
    },
    {
      "key": "customer_id",
      "value": ""
    },
    {
      "key": "mechanic_id",
      "value": ""
    },
    {
      "key": "ticket_id",
      "value": ""
    },
    {
      "key": "inventory_id",
      "value": ""
    },
    {
      "key": "auth_token",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "1. Health Check",
      "item": [
        {
          "name": "Get API Status",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test('Response contains status ok', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('ok');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. Customers",
      "item": [
        {
          "name": "Create Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"secret123\",\n  \"dob\": \"1990-05-15\"\n}"
            },
            "url": "{{base_url}}/customers/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "const jsonData = pm.response.json();",
                  "pm.collectionVariables.set('customer_id', jsonData.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Customers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/customers/?page=1&per_page=10",
              "host": ["{{base_url}}"],
              "path": ["customers", ""],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "per_page", "value": "10"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Customer by ID",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/customers/{{customer_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Customer",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Smith\",\n  \"email\": \"johnsmith@example.com\"\n}"
            },
            "url": "{{base_url}}/customers/{{customer_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Customer Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"johnsmith@example.com\",\n  \"password\": \"secret123\"\n}"
            },
            "url": "{{base_url}}/customers/login"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "const jsonData = pm.response.json();",
                  "pm.collectionVariables.set('auth_token', jsonData.token);"
                ]
              }
            }
          ]
        },
        {
          "name": "Get My Tickets (Protected)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": "{{base_url}}/customers/my-tickets"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. Mechanics",
      "item": [
        {
          "name": "Create Mechanic",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Mike Johnson\",\n  \"email\": \"mike@garage.com\",\n  \"specialization\": \"Engine Repair\",\n  \"experience\": 5\n}"
            },
            "url": "{{base_url}}/mechanics/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "const jsonData = pm.response.json();",
                  "pm.collectionVariables.set('mechanic_id', jsonData.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Mechanics",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/mechanics/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Mechanic by ID",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/mechanics/{{mechanic_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Mechanic",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Mike Johnson Sr.\",\n  \"email\": \"mike@garage.com\",\n  \"specialization\": \"Engine Repair\",\n  \"experience\": 8\n}"
            },
            "url": "{{base_url}}/mechanics/{{mechanic_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Mechanics Ranking",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/mechanics/ranking"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. Inventory",
      "item": [
        {
          "name": "Create Inventory Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Oil Filter\",\n  \"price\": 15.99\n}"
            },
            "url": "{{base_url}}/inventory/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "const jsonData = pm.response.json();",
                  "pm.collectionVariables.set('inventory_id', jsonData.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Inventory",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/inventory/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Inventory Item by ID",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/inventory/{{inventory_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Inventory Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Premium Oil Filter\",\n  \"price\": 19.99\n}"
            },
            "url": "{{base_url}}/inventory/{{inventory_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "5. Service Tickets",
      "item": [
        {
          "name": "Create Service Ticket",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"service_date\": \"2024-01-15\",\n  \"customer_id\": {{customer_id}}\n}"
            },
            "url": "{{base_url}}/service-tickets/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "const jsonData = pm.response.json();",
                  "pm.collectionVariables.set('ticket_id', jsonData.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Service Tickets",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/service-tickets/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Assign Mechanic to Ticket",
          "request": {
            "method": "PUT",
            "url": "{{base_url}}/service-tickets/{{ticket_id}}/assign-mechanic/{{mechanic_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Add Part to Ticket",
          "request": {
            "method": "PUT",
            "url": "{{base_url}}/service-tickets/{{ticket_id}}/add-part/{{inventory_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Edit Ticket Mechanics (Bulk)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"add_ids\": [],\n  \"remove_ids\": []\n}"
            },
            "url": "{{base_url}}/service-tickets/{{ticket_id}}/edit"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Remove Mechanic from Ticket",
          "request": {
            "method": "PUT",
            "url": "{{base_url}}/service-tickets/{{ticket_id}}/remove-mechanic/{{mechanic_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "6. Error Testing",
      "item": [
        {
          "name": "Get Non-existent Customer",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/customers/999"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Customer Missing Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\"\n}"
            },
            "url": "{{base_url}}/customers/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"wrong@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": "{{base_url}}/customers/login"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Access Protected Route Without Token",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/customers/my-tickets"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "7. Cleanup (Optional)",
      "item": [
        {
          "name": "Delete Customer",
          "request": {
            "method": "DELETE",
            "url": "{{base_url}}/customers/{{customer_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Mechanic",
          "request": {
            "method": "DELETE",
            "url": "{{base_url}}/mechanics/{{mechanic_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Inventory Item",
          "request": {
            "method": "DELETE",
            "url": "{{base_url}}/inventory/{{inventory_id}}"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}